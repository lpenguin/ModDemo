{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": ["objects"],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "Path to the JSON schema file"
    },
    "objects": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["id", "type"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the object"
          },
          "type": {
            "type": "string",
            "enum": ["prop", "vehicle", "scene"],
            "description": "Type of the object"
          },
          "script": {
            "type": "string",
            "description": "Path to the script file"
          }
        },
        "allOf": [
          {
            "oneOf": [
              {
                "properties": { "type": { "const": "prop" } },
                "allOf": [{ "$ref": "#/$defs/propObject" }]
              },
              {
                "properties": { "type": { "const": "vehicle" } },
                "allOf": [{ "$ref": "#/$defs/vehicleObject" }]
              },
              {
                "properties": { "type": { "const": "weapon" } },
                "allOf": [{ "$ref": "#/$defs/weaponObject" }]
              },
              {
                "properties": { "type": { "const": "scene" } },
                "allOf": [{ "$ref": "#/$defs/sceneObject" }]
              },
              {
                "properties": { "type": { "const": "empty" } },
                "allOf": [{ "$ref": "#/$defs/emptyObject" }]
              }
            ]
          }
        ]
      }
    }
  },
  "$defs": {
    "vector3": {
      "type": "object",
      "required": ["x", "y", "z"],
      "properties": {
        "x": { "type": "number" },
        "y": { "type": "number" },
        "z": { "type": "number" }
      }
    },
    "color": {
      "type": "object",
      "required": ["r", "g", "b"],
      "properties": {
        "r": { "type": "number" },
        "g": { "type": "number" },
        "b": { "type": "number" }
      }
    },
    "transform": {
      "type": "object",
      "properties": {
        "position": { "$ref": "#/$defs/vector3" },
        "scale": { "$ref": "#/$defs/vector3" },
        "rotation": { "$ref": "#/$defs/vector3" }
      }
    },
    "render": {
      "type": "object",
      "required": ["mesh"],
      "properties": {
        "mesh": {
          "type": "string",
          "description": "Path to the mesh file"
        },
        "texture": {
          "type": "string",
          "description": "Path to the texture file"
        }
      }
    },
    "collider": {
      "type": "object",
      "required": ["type"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["box", "mesh"],
          "description": "Type of collider"
        }
      },
      "allOf": [
        {
          "oneOf": [
            {
              "properties": { "type": { "const": "box" } },
              "allOf": [{ "$ref": "#/$defs/boxColliderObject" }]
            },
            {
              "properties": { "type": { "const": "mesh" } },
              "allOf": [{ "$ref": "#/$defs/meshColliderObject" }]
            }
          ]
        }
      ]
    },
    "physics": {
      "type": "object",
      "required": ["type", "collider"],
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of physics behavior",
          "enum": ["static", "rigid_body"]
        },
        "collider": { "$ref": "#/$defs/collider" },
        "mass": {
          "type": "number",
          "description": "Mass of the object"
        }
      }
    },
    "wheel": {
      "type": "object",
      "required": ["id", "transform", "use_as_traction", "use_as_steering", "mesh"],
      "properties": {
        "id": {
          "type": "string"
        },
        "transform": { "$ref": "#/$defs/transform" },
        "use_as_traction": {
          "type": "boolean",
          "description": "Whether the wheel is used for traction"
        },
        "use_as_steering": {
          "type": "boolean",
          "description": "Whether the wheel is used for steering"
        },
        "mesh": { "$ref": "#/$defs/meshProperties" }
      }
    },
    "meshProperties": {
      "type": "object",
      "required": ["render"],
      "properties": {
        "render": { "$ref": "#/$defs/render" },
        "transform": { "$ref": "#/$defs/transform" }
      }
    },
    "propObject": {
      "type": "object",
      "required": ["mesh"],
      "properties": {
        "mesh": { "$ref": "#/$defs/meshProperties" },
        "physics": { "$ref": "#/$defs/physics" }
      }
    },
    "vehicleObject": {
      "type": "object",
      "required": ["physics", "vehicle", "mesh", "wheels"],
      "properties": {
        "physics": { "$ref": "#/$defs/physics" },
        "vehicle": {
          "type": "object",
          "required": ["engine_force", "brake_force", "steering_angle"],
          "properties": {
            "engine_force": {
              "type": "number",
              "description": "Engine force of the vehicle"
            },
            "brake_force": {
              "type": "number",
              "description": "Brake force of the vehicle"
            },
            "steering_angle": {
              "type": "number",
              "description": "Steering angle of the vehicle"
            }
          }
        },
        "weapon_slots": {
          "type": "array",
          "description": "Array of weapon mounting points",
          "items": { "$ref": "#/$defs/vector3" }
        },
        "mesh": { "$ref": "#/$defs/meshProperties" },
        "wheels": {
          "type": "array",
          "items": { "$ref": "#/$defs/wheel" }
        }
      }
    },
    "sceneObject": {
      "type": "object",
      "required": ["file"],
      "properties": {
        "file": {
          "type": "string",
          "description": "Path to the scene file"
        }
      }
    },
    "bulletProjectile": {
      "type": "object",
      "required": ["color", "spread"],
      "properties": {
        "color": {
          "$ref": "#/$defs/color",
          "description": "Color of the bullet projectile (RGB values from 0 to 1)"
        },
        "spread": {
          "type": "number",
          "description": "Spread angle of the bullet in degrees"
        }
      }
    },
    "projectile": {
      "type": "object",
      "required": ["type", "damage"],
      "properties": {
        "transform": { "$ref": "#/$defs/transform" },
        "type": {
          "type": "string",
          "enum": ["bullet"],
          "description": "Type of projectile"
        },
        "damage": {
          "type": "number",
          "description": "Amount of damage dealt by the projectile"
        }
      },
      "allOf": [
        {
          "oneOf": [
            {
              "properties": { "type": { "const": "bullet" } },
              "allOf": [{ "$ref": "#/$defs/bulletProjectile" }]
            }
          ]
        }
      ]
    },
    "weaponObject": {
      "type": "object",
      "required": ["mesh", "physics", "projectile"],
      "properties": {
        "mesh": { "$ref": "#/$defs/meshProperties" },
        "physics": { "$ref": "#/$defs/physics" },
        "projectile": { "$ref": "#/$defs/projectile" },
        "numProjectiles": {
          "type": "number",
          "description": "Number of projectiles fired per shot",
          "default": 1,
          "minimum": 1
        },
        "shootDelay": {
          "type": "number",
          "description": "Delay between shots in seconds",
          "default": 0.5,
          "minimum": 0
        }
      }
    },
    "boxColliderObject": {
      "type": "object",
      "required": [],
      "properties": {
        "transform": { "$ref": "#/$defs/transform" },
        "size": { "$ref": "#/$defs/vector3" }
      }
    },
    "meshColliderObject": {
      "type": "object",
      "required": ["mesh"],
      "properties": {
        "transform": { "$ref": "#/$defs/transform" },
        "mesh": {
          "type": "string",
          "description": "Path to the collision mesh file"
        }
      }
    },
    "emptyObject": {
      "type": "object",
      "required": [],
      "properties": {}
    }
  }
}
